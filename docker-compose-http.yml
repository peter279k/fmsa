services:
  api_gateway:
    build: ./api_gateway
    command: uvicorn app.main:app --host 0.0.0.0 --workers ${API_GATEWAY_UVICORN_WORKERS} --port 8000
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - TOKEN_EXPIRED_MINUTES=${TOKEN_EXPIRED_MINUTES}
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
      - REDIS_PASSWORD=${API_GATEWAY_REDIS_PASSWORD}
    depends_on:
      - api_gateway_access_token_storage
      - keycloak_adapter
    volumes:
      - ./api_gateway/:/app/

  api_gateway_access_token_storage:
    image: bitnami/redis:latest
    environment:
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL,CONFIG
      - REDIS_AOF_ENABLED=no
      - REDIS_PASSWORD=${API_GATEWAY_REDIS_PASSWORD}
    command: /opt/bitnami/scripts/redis/run.sh --maxmemory 300mb
    volumes:
      - redis_api_gateway_access_token_storage:/bitnami/redis/data
    restart: always

  keycloak_adapter:
    image: quay.io/keycloak/keycloak:23.0.7
    environment:
      - KC_HOSTNAME=localhost
      - KC_HOSTNAME_PORT=8080
      - KC_HOSTNAME_STRICT_BACKCHANNEL=false
      - KC_HTTP_ENABLED=true
      - KC_HOSTNAME_STRICT_HTTPS=false
      - KC_HEALTH_ENABLED=true
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://keycloak_adapter_postgres/${KC_POSTGRES_DB}
      - KC_DB_USERNAME=${KC_POSTGRES_DB_USERNAME}
      - KC_DB_PASSWORD=${KC_POSTGRES_DB_PASSWORD}
    restart: always
    depends_on:
      - keycloak_adapter_postgres
    command:
      - start

  keycloak_adapter_postgres:
    image: postgres:14.10-alpine
    volumes:
      - keycloak_adapter_postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${KC_POSTGRES_DB_USERNAME}
      - POSTGRES_PASSWORD=${KC_POSTGRES_DB_PASSWORD}
      - POSTGRES_DB=${KC_POSTGRES_DB}
    restart: always

  data_analysis_service:
    build: ./data_analysis_service
    command: uvicorn app.main:app --host 0.0.0.0 --workers ${DATA_ANALYSIS_SERVICE_UVICORN_WORKERS} --port 8000
    volumes:
      - ./data_analysis_service/:/app/
    environment:
      - DATABASE_HOST=${DATA_ANALYSIS_DATABASE_HOST}
      - DATABASE_USER=${DATA_ANALYSIS_DATABASE_USER}
      - DATABASE_PASSWORD=${DATA_ANALYSIS_DATABASE_PASSWORD}
    depends_on:
      - analysis_db
    restart: always

  analysis_db:
    image: bitnami/clickhouse:24
    volumes:
      - clickhouse_analysis_data:/bitnami/clickhouse
    environment:
      - ALLOW_EMPTY_PASSWORD=no
      - CLICKHOUSE_ADMIN_USER=${ANALYSIS_DB_CLICKHOUSE_ADMIN_USER}
      - CLICKHOUSE_ADMIN_PASSWORD=${ANALYSIS_DB_CLICKHOUSE_ADMIN_PASSWORD}
    restart: always

  ioht_data_collector:
    build: ./ioht_data_collector
    command: uvicorn app.main:app --host 0.0.0.0 --workers ${IOHT_DATA_COLLECTOR_UVICORN_WORKERS} --port 8000
    volumes:
      - ./ioht_data_collector/:/app/
    environment:
      - DATABASE_HOST=${IOHT_DATABASE_HOST}
      - DATABASE_USER=${IOHT_DATABASE_USER}
      - DATABASE_PASSWORD=${IOHT_DATABASE_PASSWORD}
    depends_on:
      - ioht_db
    restart: always

  ioht_db:
    image: bitnami/clickhouse:24
    volumes:
      - clickhouse_ioht_data:/bitnami/clickhouse
    environment:
      - ALLOW_EMPTY_PASSWORD=no
      - CLICKHOUSE_ADMIN_USER=${IOHT_DB_CLICKHOUSE_ADMIN_USER}
      - CLICKHOUSE_ADMIN_PASSWORD=${IOHT_DB_CLICKHOUSE_ADMIN_PASSWORD}
    restart: always

  fhir_generator:
    build: ./fhir_generator
    command: uvicorn app.main:app --host 0.0.0.0 --workers ${FHIR_GENERATOR_UVICORN_WORKERS} --port 8000
    volumes:
      - ./fhir_generator/:/app/
    restart: always

  fhir_converter:
    build: ./fhir_converter
    command: uvicorn app.main:app --host 0.0.0.0 --workers ${FHIR_CONVERTER_UVICORN_WORKERS} --port 8000
    volumes:
      - ./fhir_converter/:/app/
    restart: always

  fhir_ig_manager:
    build: ./fhir_ig_manager
    command: uvicorn app.main:app --host 0.0.0.0 --workers ${FHIR_IG_MANAGER_UVICORN_WORKERS} --port 8000
    volumes:
      - ./fhir_ig_manager/:/app/
    environment:
      - FHIR_IG_MANAGER_DB_USER=${FHIR_IG_MANAGER_DB_USER}
      - FHIR_IG_MANAGER_DB_PASSWORD=${FHIR_IG_MANAGER_DB_PASSWORD}
      - FHIR_IG_MANAGER_DB=${FHIR_IG_MANAGER_DB}
    depends_on:
      - fhir_ig_manager_db
    restart: always

  fhir_ig_manager_db:
    image: mongo:7.0.16-jammy
    volumes:
      - fhir_ig_manager_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${FHIR_IG_MANAGER_DB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${FHIR_IG_MANAGER_DB_PASSWORD}
      - MONGO_INITDB_DATABASE=${FHIR_IG_MANAGER_DB}
    restart: always

  fhir_profile_manager:
    build: ./fhir_profile_manager
    command: uvicorn app.main:app --host 0.0.0.0 --workers ${FHIR_PROFILE_MANAGER_UVICORN_WORKERS} --port 8000
    volumes:
      - ./fhir_profile_manager/:/app/
    environment:
      - FHIR_PROFILE_MANAGER_DB_USER=${FHIR_PROFILE_MANAGER_DB_USER}
      - FHIR_PROFILE_MANAGER_DB_PASSWORD=${FHIR_PROFILE_MANAGER_DB_PASSWORD}
      - FHIR_PROFILE_MANAGER_DB=${FHIR_PROFILE_MANAGER_DB}
    depends_on:
      - fhir_profile_manager_db
    restart: always

  fhir_profile_manager_db:
    image: mongo:7.0.16-jammy
    volumes:
      - fhir_profile_manager_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${FHIR_PROFILE_MANAGER_DB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${FHIR_PROFILE_MANAGER_DB_PASSWORD}
      - MONGO_INITDB_DATABASE=${FHIR_PROFILE_MANAGER_DB}
    restart: always

  fhir_data_manager:
    build: ./fhir_data_manager
    command: uvicorn app.main:app --host 0.0.0.0 --workers ${FHIR_DATA_MANAGER_UVICORN_WORKERS} --port 8000
    volumes:
      - ./fhir_data_manager/app/tests:/app/app/tests
      - ./fhir_data_manager/app/modules:/app/app/modules
      - ./fhir_data_manager/app/routers:/app/app/routers
      - ./fhir_data_manager/app/item_models:/app/app/item_models
      - ./fhir_data_manager/app/main.py:/app/app/main.py
      - ./fhir_data_manager/app/__init__.py:/app/app/__init__.py
    environment:
      - FHIR_DATA_MANAGER_DB_USER=${FHIR_DATA_MANAGER_DB_USER}
      - FHIR_DATA_MANAGER_DB_PASSWORD=${FHIR_DATA_MANAGER_DB_PASSWORD}
      - FHIR_DATA_MANAGER_DB=${FHIR_DATA_MANAGER_DB}
    depends_on:
      - fhir-server-adapter
      - fhir_server_adapter_postgres
      - fhir_data_manager_db
    restart: always

  fhir_data_manager_db:
    image: mongo:7.0.16-jammy
    volumes:
      - fhir_data_manager_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${FHIR_DATA_MANAGER_DB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${FHIR_DATA_MANAGER_DB_PASSWORD}
      - MONGO_INITDB_DATABASE=${FHIR_DATA_MANAGER_DB}
    restart: always

  fhir-server-adapter:
    image: "hapiproject/hapi:v7.6.0"
    volumes:
      - ./fhir_server_adapter/hapi.application.yml:/app/config/application.yaml:ro
    depends_on:
      - fhir_server_adapter_postgres

  fhir_server_adapter_postgres:
    image: postgres:14.10-alpine
    volumes:
      - fhir_server_adapter_postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${FHIR_DATA_MANAGER_DB_USER}
      - POSTGRES_PASSWORD=${FHIR_DATA_MANAGER_DB_PASSWORD}
      - POSTGRES_DB=${FHIR_DATA_MANAGER_DB}
    restart: always

  terminology_manager:
    build: ./terminology_manager
    command: uvicorn app.main:app --host 0.0.0.0 --workers ${TERMINOLOGY_MANAGER_UVICORN_WORKERS} --port 8000
    volumes:
      - ./terminology_manager/:/app/
    environment:
      - TERMINOLOGY_MANAGER_DB_USER=${TERMINOLOGY_MANAGER_DB_USER}
      - TERMINOLOGY_MANAGER_DB_PASSWORD=${TERMINOLOGY_MANAGER_DB_PASSWORD}
      - TERMINOLOGY_MANAGER_DB=${TERMINOLOGY_MANAGER_DB}
    depends_on:
      - terminology_manager_db
    restart: always

  terminology_manager_db:
    image: mongo:7.0.16-jammy
    volumes:
      - terminology_manager_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${TERMINOLOGY_MANAGER_DB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${TERMINOLOGY_MANAGER_DB_PASSWORD}
      - MONGO_INITDB_DATABASE=${TERMINOLOGY_MANAGER_DB}
    restart: always

  nginx:
    image: nginx:latest
    ports:
      - 8080:8080
    volumes:
      - ./nginx_config.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - api_gateway
      - data_analysis_service
      - ioht_data_collector
      - fhir_generator
      - fhir_converter
      - fhir_ig_manager
      - fhir_profile_manager
      - fhir_data_manager
      - terminology_manager
    restart: always

volumes:
  redis_api_gateway_access_token_storage:
  clickhouse_analysis_data:
  clickhouse_ioht_data:
  keycloak_adapter_postgres_data:
  fhir_server_adapter_postgres_data:
  fhir_data_manager_data:
  fhir_ig_manager_data:
  fhir_profile_manager_data:
  terminology_manager_data:
